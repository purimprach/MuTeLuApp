import Foundation
import SwiftUI

class OfferingGameViewModel: ObservableObject {
    @Published var basket: [OfferingItem] = []
    @Published var currentLevel = 0
    @Published var isGameFinished = false
    
    var currentOfferingLevel: OfferingLevel {
        offeringLevels[currentLevel]
    }
    
    var usedBudget: Int {
        basket.reduce(0) { $0 + $1.price }
    }
    
    // üëá ‡πÄ‡∏û‡∏¥‡πà‡∏° 2 ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ô‡∏µ‡πâ
    var isOverBudget: Bool {
        usedBudget > currentOfferingLevel.budget
    }
    
    func addItem(_ item: OfferingItem) {
        basket.append(item)
    }
    
    // üëá ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ
    func removeItem(_ item: OfferingItem) {
        if let index = basket.firstIndex(where: { $0.id == item.id }) {
            basket.remove(at: index)
        }
    }
    
    func resetBasket() {
        basket.removeAll()
    }
    
    // üëá ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Error
    func checkResult() -> (success: Bool, message: (th: String, en: String)) {
        if isOverBudget {
            return (false, (th: "‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î", en: "You are over budget"))
        }
        
        let appropriateCount = basket.filter { $0.isAppropriate }.count
        if appropriateCount < currentOfferingLevel.minAppropriateCount {
            return (false, (th: "‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏°‡∏µ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ï‡∏≤‡∏°‡∏Å‡∏≥‡∏´‡∏ô‡∏î", en: "Not enough appropriate items"))
        }
        
        if basket.contains(where: { !$0.isAppropriate }) {
            return (false, (th: "‡∏°‡∏µ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≤‡∏á‡∏ä‡∏¥‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤", en: "There is an inappropriate item in the basket"))
        }
        
        return (true, (th: "", en: ""))
    }
    
    func goToNextLevel() {
        if currentLevel + 1 < offeringLevels.count {
            currentLevel += 1
            resetBasket()
        } else {
            // ‡∏î‡πà‡∏≤‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß
            isGameFinished = true
        }
    }
}
