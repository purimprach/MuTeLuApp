import SwiftUI

struct BookmarkView: View {
    @EnvironmentObject var language: AppLanguage
    @EnvironmentObject var flowManager: MuTeLuFlowManager
    @EnvironmentObject var bookmarkStore: BookmarkStore
    @StateObject private var viewModel = SacredPlaceViewModel() // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏≤ place ‡πÑ‡∏î‡πâ
    @AppStorage("loggedInEmail") private var loggedInEmail: String = ""
    
    // ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    private var bookmarkedRecords: [BookmarkRecord] {
        bookmarkStore.getBookmarks(for: loggedInEmail)
    }
    
    var body: some View {
        VStack {
            // (‡∏™‡πà‡∏ß‡∏ô Header ‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏° "‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö" ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏•‡∏ö‡πÑ‡∏õ ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß)
            
            if bookmarkedRecords.isEmpty {
                Spacer()
                Text(language.localized("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏î‡πÜ", "You haven't bookmarked any places yet."))
                    .foregroundColor(.secondary)
                Spacer()
            } else {
                List(bookmarkedRecords) { record in
                    // ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡πá‡∏°‡πÜ ‡∏à‡∏≤‡∏Å ID ‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
                    if let place = viewModel.places.first(where: { $0.id.uuidString == record.placeID }) {
                        BookmarkRow(place: place, record: record)
                            .onTapGesture {
                                // --- üëá ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ ---
                                flowManager.navigateTo(.sacredDetail(place: place)) // ‡πÉ‡∏ä‡πâ navigateTo
                                // --- üëÜ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ---
                            }
                        // ‡∏™‡πà‡∏á EnvironmentObjects ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏´‡πâ BookmarkRow ‡∏î‡πâ‡∏ß‡∏¢
                            .environmentObject(language)
                    } else {
                        // ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà
                        Text("Error: Place data not found for ID \(record.placeID)")
                            .foregroundColor(.red)
                            .font(.caption)
                    }
                }
                .listStyle(.plain)
            }
        }
        .navigationTitle("üìç \(language.localized("‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ", "Bookmarked Places"))")
        .navigationBarTitleDisplayMode(.inline)
        // ‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞ load view model ‡∏ï‡∏≠‡∏ô onAppear ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ load ‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô
        .onAppear {
            if viewModel.places.isEmpty {
                viewModel.loadPlaces() // ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô load ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
            }
        }
    }
}

// --- Subview ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (BookmarkRow) ---
// (‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á ‡∏ô‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏±‡∏ö EnvironmentObject ‡πÄ‡∏û‡∏¥‡πà‡∏°)
struct BookmarkRow: View {
    let place: SacredPlace
    let record: BookmarkRecord
    @EnvironmentObject var language: AppLanguage // ‡∏£‡∏±‡∏ö language ‡∏°‡∏≤‡πÉ‡∏ä‡πâ
    
    private var dateFormatter: DateFormatter {
        let formatter = DateFormatter()
        formatter.dateStyle = .medium
        formatter.timeStyle = .short
        formatter.locale = Locale(identifier: language.currentLanguage == "th" ? "th_TH" : "en_US")
        return formatter
    }
    
    var body: some View {
        HStack(spacing: 15) {
            // ‡∏Ñ‡∏ß‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏™‡∏î‡∏á
            Image(uiImage: UIImage(named: place.imageName) ?? UIImage(systemName: "photo")!) // ‡πÉ‡∏ä‡πâ placeholder ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ
                .resizable()
                .scaledToFill()
                .frame(width: 80, height: 80)
                .cornerRadius(12)
                .clipped()
                .foregroundColor(.gray) // ‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö placeholder
            
            VStack(alignment: .leading, spacing: 5) {
                Text(language.localized(place.nameTH, place.nameEN))
                    .font(.headline)
                    .lineLimit(2)
                
                Text(language.localized("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠: ", "Saved on: ") + dateFormatter.string(from: record.savedDate))
                    .font(.caption)
                    .foregroundColor(.secondary)
            }
            
            Spacer()
            
            Image(systemName: "chevron.right")
                .foregroundColor(.secondary.opacity(0.5))
        }
        .padding(.vertical, 8)
    }
}
