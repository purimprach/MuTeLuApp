import SwiftUI

struct GreetingStartupView: View {
    @EnvironmentObject var memberStore: MemberStore
    @EnvironmentObject var language: AppLanguage
    @EnvironmentObject var flowManager: MuTeLuFlowManager
    @AppStorage("loggedInEmail") var loggedInEmail: String = ""
    
    var currentMember: Member? {
        // ‡πÉ‡∏ä‡πâ .lowercased() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Case Sensitive ‡∏ï‡∏≠‡∏ô‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö email
        memberStore.members.first { $0.email.lowercased() == loggedInEmail.lowercased() }
    }
    
    var body: some View {
        VStack(spacing: 20) {
            // Spacer() // ‡πÄ‡∏û‡∏¥‡πà‡∏° Spacer ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏•‡∏≤‡∏á‡πÜ
            
            if let member = currentMember {
                // ‡πÉ‡∏ä‡πâ Text Interpolation ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡∏ï‡πà‡∏≠ String
                Text(language.localized("‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì \(member.fullName)", "Hello, \(member.fullName)"))
                    .font(.title2)
                    .fontWeight(.bold)
                    .multilineTextAlignment(.center) // ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≤‡∏ß
                
                Text(language.localized("‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡πÄ‡∏ä‡πá‡∏Å‡∏î‡∏ß‡∏á‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö", "Don't forget to check your daily fortune!"))
                    .font(.body)
                    .foregroundColor(.secondary)
                    .multilineTextAlignment(.center)
            } else {
                // ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏û‡∏ö member (‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏î‡πâ)
                Text(language.localized("‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà Mu Te Lu", "Welcome to Mu Te Lu"))
                    .font(.title2)
                    .fontWeight(.bold)
                Text(language.localized("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...", "Loading data..."))
                    .font(.body)
                    .foregroundColor(.secondary)
            }
            
            // Spacer() // ‡πÄ‡∏û‡∏¥‡πà‡∏° Spacer ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
        }
        .padding()
        .frame(maxWidth: .infinity, maxHeight: .infinity) // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ VStack ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
        .background(Color(.systemGroupedBackground).ignoresSafeArea()) // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
        .onAppear {
            DispatchQueue.main.asyncAfter(deadline: .now() + 2) {
                // --- üëá ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ ---
                flowManager.navigateTo(.home) // ‡πÉ‡∏ä‡πâ navigateTo
                // --- üëÜ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ---
            }
        }
    }
}

// Preview (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) ‡∏Ñ‡∏ß‡∏£‡∏™‡πà‡∏á EnvironmentObject ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
#Preview {
    GreetingStartupView()
        .environmentObject(MemberStore()) // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
        .environmentObject(AppLanguage())
        .environmentObject(MuTeLuFlowManager())
}
